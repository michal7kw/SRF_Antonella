#!/bin/bash

# Documentation:
# This script merges individual replicate broadPeak files for GFP and YAF samples
# using a unified Python script.
# It calls 'scripts/merge_peaks.py', passing a target directory as an argument.
# The Python script handles merging GFP_*_broad_peaks_final.broadPeak into GFP.broadPeak
# and YAF_*_broad_peaks_final.broadPeak into YAF.broadPeak within that target directory.

# Usage:
# ./5b_merge_replicate_peaks.sh <path_to_peak_directory>
# Example:
# ./5b_merge_replicate_peaks.sh analysis/5_peak_calling_v2

# Requirements:
# - python3 must be installed and in the PATH.
# - The Python script 'merge_peaks.py' must exist in the 'scripts/' directory
#   relative to this shell script.
# - The target directory provided as an argument must exist and contain the
#   individual replicate broadPeak files (e.g., GFP_1_broad_peaks_final.broadPeak).

# Input files (handled by the Python script, within the provided directory):
# - <peak_directory>/GFP_*_broad_peaks_final.broadPeak
# - <peak_directory>/YAF_*_broad_peaks_final.broadPeak

# Output files (generated by the Python script, within the provided directory):
# - <peak_directory>/GFP.broadPeak
# - <peak_directory>/YAF.broadPeak
# - logs/5b_merge_replicate_peaks.log (log file for this script)

set -e  # Exit on error
set -u  # Exit on undefined variable
# set -x # Uncomment for debugging

# --- Argument Check ---
if [ "$#" -ne 1 ]; then
    echo "Usage: $0 <path_to_peak_directory>"
    echo "Example: $0 analysis/5_peak_calling_v2"
    exit 1
fi

PEAK_FILES_DIR="$1"

if [ ! -d "$PEAK_FILES_DIR" ]; then
    echo "Error: Peak directory '$PEAK_FILES_DIR' not found."
    exit 1
fi
# Convert to absolute path for clarity in logs, though Python script also does this
PEAK_FILES_DIR=$(cd "$PEAK_FILES_DIR" && pwd)


# --- Configuration ---

# Define base directory relative to the script's location
WORKDIR="."
cd "$WORKDIR" || { echo "Error: Could not change to working directory $WORKDIR"; exit 1; }

# Define directory containing the Python script (relative to this shell script)
PYTHON_SCRIPT_SUBDIR="scripts"
LOG_DIR="logs"

# Unified Python script to execute
UNIFIED_MERGE_SCRIPT="${PYTHON_SCRIPT_SUBDIR}/merge_peaks.py"

# --- Setup ---

# Create log directory
mkdir -p "$LOG_DIR"

# Log file
LOG_FILE="${LOG_DIR}/5b_merge_replicate_peaks.log"
exec > >(tee -a "$LOG_FILE") 2>&1 # Redirect stdout and stderr to log file and console

echo "--- Starting Replicate Peak Merging ---"
echo "Timestamp: $(date)"
echo "Target Peak Directory: $PEAK_FILES_DIR"
echo "Python Script: $UNIFIED_MERGE_SCRIPT"
echo "Log File: $LOG_FILE"
echo "---------------------------------------"

# --- Main Processing ---

# Check if python3 is available
if ! command -v python3 &> /dev/null; then
    echo "Error: python3 command not found. Please install Python 3 and ensure it's in your PATH."
    exit 1
fi
echo "Found python3: $(command -v python3)"

# Check if the unified Python script exists
if [[ ! -f "$UNIFIED_MERGE_SCRIPT" ]]; then
    echo "Error: Unified merge script not found: $UNIFIED_MERGE_SCRIPT"
    echo "Ensure it is located at './scripts/merge_peaks.py' relative to this script."
    exit 1
fi
echo "Found Python script: $UNIFIED_MERGE_SCRIPT"

echo ""
echo "Executing Python script to merge peaks in '$PEAK_FILES_DIR'..."
if python3 "$UNIFIED_MERGE_SCRIPT" "$PEAK_FILES_DIR"; then
    echo "Successfully executed $UNIFIED_MERGE_SCRIPT for directory $PEAK_FILES_DIR"
    # Check for output files (optional, as Python script gives detailed logs)
    if [[ -f "${PEAK_FILES_DIR}/GFP.broadPeak" ]]; then
        echo "Output file confirmed: ${PEAK_FILES_DIR}/GFP.broadPeak"
    else
        echo "Warning: Output file ${PEAK_FILES_DIR}/GFP.broadPeak not found after script execution. Check Python script logs."
    fi
    if [[ -f "${PEAK_FILES_DIR}/YAF.broadPeak" ]]; then
        echo "Output file confirmed: ${PEAK_FILES_DIR}/YAF.broadPeak"
    else
        echo "Warning: Output file ${PEAK_FILES_DIR}/YAF.broadPeak not found after script execution. Check Python script logs."
    fi
else
    echo "Error: Failed to execute $UNIFIED_MERGE_SCRIPT for directory $PEAK_FILES_DIR"
    # The script will exit here due to 'set -e', or Python script might exit with non-zero
fi

echo ""
echo "--- Replicate Peak Merging Finished ---"
echo "Timestamp: $(date)"
echo "Log file: $LOG_FILE"
echo "Please check $PEAK_FILES_DIR for GFP.broadPeak and YAF.broadPeak."
echo "Review $LOG_FILE and Python script output for details."
echo "---------------------------------------"