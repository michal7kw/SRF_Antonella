#!/bin/bash

# Documentation:
# This script runs the R script '8_peaks_annotation.R' to perform peak annotation
# for individual BED files and generates detailed pie charts of genomic feature
# distribution for each sample.
#
# It requires two arguments:
# 1. Input directory: Path to the directory containing consensus peak BED files (e.g., GFP_consensus_peaks.bed, YAF_consensus_peaks.bed)
# 2. Output directory: Base path for the output directories and files generated by the R script.
#
# Example usage:
# ./SRF_H2AK119Ub/1_iterative_processing/8_peaks_annotation.sh ./analysis/6_consensus_peaks ./analysis/8_annotation_and_enrichment_per_sample

set -e  # Exit immediately if a command exits with a non-zero status.
set -u  # Treat unset variables as an error when substituting.
set -o pipefail # Return value of a pipeline is the value of the last command to exit with a non-zero status, or zero if no command exited with a non-zero status

# Function to log messages with timestamps
log_message() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" >&2
}

# Define working directory (assuming the script is run from the project root)
WORKDIR="."
cd "$WORKDIR" || { log_message "ERROR: Failed to change to working directory $WORKDIR"; exit 1; }

# Define default values
# DEFAULT_INPUT_DIR="./analysis/6_consensus_peaks"
# DEFAULT_OUTPUT_DIR_BASE="./analysis/8_peaks_annotation"

DEFAULT_INPUT_DIR="./analysis/6_consensus_peaks_strict"
DEFAULT_OUTPUT_DIR_BASE="./analysis/8_peaks_annotation_strict"

# Assign arguments to variables, using defaults if not provided
INPUT_DIR="${1:-$DEFAULT_INPUT_DIR}"
OUTPUT_DIR_BASE="${2:-$DEFAULT_OUTPUT_DIR_BASE}"

# Log input and output directories being used
log_message "Using Input directory: ${INPUT_DIR}"
log_message "Using Output directory base: ${OUTPUT_DIR_BASE}"

# Check if the input directory exists
if [ ! -d "$INPUT_DIR" ]; then
    log_message "ERROR: Input directory not found: $INPUT_DIR"
    log_message "Please ensure the directory exists or provide a valid path as an argument."
    exit 1
fi

# Define the R script path
R_SCRIPT_PATH="${WORKDIR}/scripts/8_peaks_annotation.R"

# Check if the R script exists
if [ ! -f "$R_SCRIPT_PATH" ]; then
    log_message "ERROR: R script not found: $R_SCRIPT_PATH"
    exit 1
fi

# Create log directory if it doesn't exist
LOG_DIR="${WORKDIR}/logs" # Or specify a different log directory if preferred
mkdir -p "$LOG_DIR"

# Run R script for peak annotation
log_message "Running peak annotation R script..."
Rscript "${R_SCRIPT_PATH}" "${INPUT_DIR}" "${OUTPUT_DIR_BASE}"

log_message "Peak annotation script finished."
log_message "Output files should be in subdirectories under: ${OUTPUT_DIR_BASE}"

# Example command to make the script executable:
# chmod +x SRF_H2AK119Ub/1_iterative_processing/8_peaks_annotation.sh